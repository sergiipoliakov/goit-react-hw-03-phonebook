{"version":3,"sources":["components/Layout/Layout.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Layout","children","className","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","duplicate","props","contacts","filter","contact","elements","length","alert","onAddContact","this","onSubmit","type","onChange","Component","Filter","onChangeFilter","defaultProps","ContactListItem","id","onRemove","onClick","ContactList","onRemoveContact","map","App","addContact","data","uuid","prevState","removeContact","contactId","changeFilter","getFilteredName","toLowerCase","includes","prevProps","localStorage","setItem","JSON","stringify","getItem","parsContacts","parse","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c6247d2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport './Layout.css';\n\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ContactForm extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicate = this.props.contacts.filter(\n      contact => contact.name === e.target.elements[0].value,\n    );\n    if (duplicate.length) {\n      return alert(`${duplicate[0].name} is already in contacts`);\n    }\n\n    this.props.onAddContact(this.state);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <label className=\"form-label\">\n          Name\n          <input\n            className=\"form-input\"\n            type=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            name=\"name\"\n          />\n        </label>\n\n        <label className=\"form-label\">\n          Number\n          <input\n            className=\"form-input\"\n            type=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            name=\"number\"\n          />\n        </label>\n\n        <button className=\"form-button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div className=\"form\">\n      <label className=\"form-label\">\n        Find contact by name\n        <input\n          type=\"text\"\n          className=\"form-input\"\n          value={value}\n          onChange={e => onChangeFilter(e.target.value)}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  value: 'noName',\n  number: '123 45 67',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n\n  onChangeFilter: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, onRemove }) => (\n  <li key={id} className=\"ContactList-item\">\n    <p className=\"ContactList-text\">{name}: </p>\n    <p className=\"ContactList-text\">{number}</p>\n    <div className=\"ContactList-actions\">\n      <button type=\"button\" className=\"ContactList-button\" onClick={onRemove}>\n        Delete\n      </button>\n    </div>\n  </li>\n);\n\nexport default ContactListItem;\n\nContactListItem.defaultProps = {\n  name: 'noName',\n  number: '123 45 67',\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemove: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className=\"ContactList\">\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        id={id}\n        name={name}\n        number={number}\n        onRemove={() => onRemoveContact(id)}\n      />\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      number: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ),\n  onRemoveContact: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport { uuid } from 'uuidv4';\nimport Layout from './components/Layout';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsContacts = JSON.parse(contacts);\n\n    if (parsContacts) {\n      this.setState({ contacts: parsContacts });\n    }\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  addContact = data => {\n    const contact = {\n      id: uuid(),\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredName = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n\n    const filteredContacts = this.getFilteredName();\n\n    return (\n      <Layout>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} contacts={contacts} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onRemoveContact={this.removeContact}\n        />\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}